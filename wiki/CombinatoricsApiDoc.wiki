#summary combinatorics API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for combinatorics=
by Mark Engelberg

Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.combinatorics))
}}}
==Overview==
<pre> Efficient, functional algorithms for generating lazy 
sequences for common combinatorial functions. (See the source code  
for a longer description.)</pre>


==Public Variables and Functions==
Shortcuts:
[#cartesian-product cartesian-product] [#combinations combinations] [#lex-permutations lex-permutations] [#permutations permutations] [#selections selections] [#subsets subsets] 

----
===cartesian-product===
====function====
<pre>
Usage: *(_cartesian-product_ & seqs)*
</pre>
<pre> All the ways to take one item from each sequence</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#107 Source] [http://www.google.com/codesearch?hl=en&lr=&q=cartesian-product+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===combinations===
====function====
<pre>
Usage: *(_combinations_ items n)*
</pre>
<pre> All the unique ways of taking n different elements from items</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#90 Source] [http://www.google.com/codesearch?hl=en&lr=&q=combinations+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===lex-permutations===
====function====
<pre>
Usage: *(_lex-permutations_ c)*
</pre>
<pre> Fast lexicographic permutation generator for a sequence of numbers</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#151 Source] [http://www.google.com/codesearch?hl=en&lr=&q=lex-permutations+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===permutations===
====function====
<pre>
Usage: *(_permutations_ items)*
</pre>
<pre> All the permutations of items, lexicographic by index</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#160 Source] [http://www.google.com/codesearch?hl=en&lr=&q=permutations+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===selections===
====function====
<pre>
Usage: *(_selections_ items n)*
</pre>
<pre> All the ways of taking n (possibly the same) elements from the sequence of items</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#127 Source] [http://www.google.com/codesearch?hl=en&lr=&q=selections+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===subsets===
====function====
<pre>
Usage: *(_subsets_ items)*
</pre>
<pre> All the subsets of items</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/combinatorics.clj#101 Source] [http://www.google.com/codesearch?hl=en&lr=&q=subsets+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
