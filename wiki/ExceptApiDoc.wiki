#summary except API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for except=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.except))
}}}


==Public Variables and Functions==
Shortcuts:
[#(_throw-arg_&_args) throw-arg] [#(_throw-if_test_&_args) throw-if] [#(_throw-if-not_test_&_args) throw-if-not] [#(_throwf_&_args) throwf] 

----
===(_throw-arg_ & args)===
<pre> Throws an IllegalArgumentException. All arguments are optional:

       format? format-args`*`

 - format is a format string for clojure/format
- format-args are objects that correspond to format specifiers in
  format.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/except.clj#51 Source] [http://www.google.com/codesearch?hl=en&lr=&q=[^-*a-zA-Z]throw-arg([^-*a-zA-Z]|%24)+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_throw-if_ test & args)===
<pre> Throws an Exception or Error if test is true. args are those documented
for throwf.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/except.clj#37 Source] [http://www.google.com/codesearch?hl=en&lr=&q=[^-*a-zA-Z]throw-if([^-*a-zA-Z]|%24)+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_throw-if-not_ test & args)===
<pre> Throws an Exception or Error if test is false. args are those documented
for throwf.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/except.clj#44 Source] [http://www.google.com/codesearch?hl=en&lr=&q=[^-*a-zA-Z]throw-if-not([^-*a-zA-Z]|%24)+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_throwf_ & args)===
<pre> Throws an Exception or Error with an optional message formatted using
clojure/format. All arguments are optional:

     class? format? format-args`*`

 - class defaults to Exception, if present it must name a kind of
  Throwable
- format is a format string for clojure/format
- format-args are objects that correspond to format specifiers in
  format.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/except.clj#23 Source] [http://www.google.com/codesearch?hl=en&lr=&q=[^-*a-zA-Z]throwf([^-*a-zA-Z]|%24)+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]