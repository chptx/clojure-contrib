#summary generic.arithmetic API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for generic.arithmetic=
by Konrad Hinsen

Usage: 
{{{
(ns <your-namespace>
  (:require clojure.contrib.generic.arithmetic))
}}}
==Overview==
<pre> Generic arithmetic interface 
This library defines generic versions of + - `*` / as multimethods 
that can be defined for any type. The minimal required  
implementations for a type are binary + and `*` plus unary - and /. 
Everything else is derived from these automatically. Explicit 
binary definitions for - and / can be provided for 
efficiency reasons.</pre>


==Public Variables and Functions==
Shortcuts:
[#* *] [#+ +] [#- -] [#/ /] [#defmethod_* defmethod*] [#qsym qsym] 

----
===`*`===
====multimethod====
<pre>
Usage: *(_`*`_ x)
       (_`*`_ x y)
       (_`*`_ x y & more)*
</pre>
<pre> Return the product of all arguments. The minimal implementation for type 
::my-type is the binary form with dispatch value `[`::my-type ::my-type`]`.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#111 Source] [http://www.google.com/codesearch?hl=en&lr=&q=*+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===+===
====multimethod====
<pre>
Usage: *(_+_ x)
       (_+_ x y)
       (_+_ x y & more)*
</pre>
<pre> Return the sum of all arguments. The minimal implementation for type 
::my-type is the binary form with dispatch value `[`::my-type ::my-type`]`.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#45 Source] [http://www.google.com/codesearch?hl=en&lr=&q=++package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===-===
====multimethod====
<pre>
Usage: *(_-_ x)
       (_-_ x y)
       (_-_ x y & more)*
</pre>
<pre> Return the difference of the first argument and the sum of all other 
arguments. The minimal implementation for type ::my-type is the binary 
form with dispatch value `[`::my-type ::my-type`]`.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#77 Source] [http://www.google.com/codesearch?hl=en&lr=&q=-+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===/===
====multimethod====
<pre>
Usage: *(_/_ x)
       (_/_ x y)
       (_/_ x y & more)*
</pre>
<pre> Return the quotient of the first argument and the product of all other 
arguments. The minimal implementation for type ::my-type is the binary 
form with dispatch value `[`::my-type ::my-type`]`.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#143 Source] [http://www.google.com/codesearch?hl=en&lr=&q=/+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===defmethod`*`===
====macro====
<pre>
Usage: *(_defmethod`*`_ ns name & args)*
</pre>
<pre> Define a method implementation for the multimethod name in namespace ns. 
Required for implementing the division function from another namespace.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#173 Source] [http://www.google.com/codesearch?hl=en&lr=&q=defmethod*+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===qsym===
====macro====
<pre>
Usage: *(_qsym_ ns sym)*
</pre>
<pre> Create the qualified symbol corresponding to sym in namespace ns. 
Required to access the division function from another namespace, 
e.g. as (qsym clojure.contrib.generic.arithmetic /).</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/generic/arithmetic.clj#180 Source] [http://www.google.com/codesearch?hl=en&lr=&q=qsym+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
