#summary javalog API Reference

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for javalog=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.javalog))
}}}
==Public Variables and Functions==
Shortcuts:
[#_*logger*_ *logger*] [#(_add-log-file_logger-name_filename) add-log-file] [#(_log_level_&_strings) log] [#(_log-level_level) log-level] [#(_root-logger_) root-logger] [#(_set-console-log-level_level) set-console-log-level] [#(_with-logger_logger-name_level_&_body) with-logger] 
----
===_`*`logger`*`_===
The current java.util.logging.Logger.  By default, the
global logger, modified by 'with-logger'.
----
===(_add-log-file_ logger-name filename)===
===(_add-log-file_ logger-name filename level)===
Attaches a log file, using SimpleFormatter, with the given level,
to the named logger.  'level' defaults to ALL.  Note: multiple
invocations will create multiple log files, with numbers appended to
the names.
----
===(_log_ level & strings)===
====Macro====
Logs a message to `*`logger`*`.  'level' is expanded with 'log-level'.
Example: (log :severe "Bad argument: " object)
----
===(_log-level_ level)===
====Macro====
Translates 'level' (a lower-case keyword) into a static field of
java.util.logging.Level, by name.  

Example: (log-level :severe)  =>  java.util.logging.Level.SEVERE

If 'level' is not a keyword, it is assumed to be a user-defined
instance of java.util.logging.Level and is returned unchanged.
----
===(_root-logger_)===
===(_root-logger_ logger)===
Returns the root Logger instance.
----
===(_set-console-log-level_ level)===
Attempts to set the level of the current logger and the root
ConsoleHandler to 'level' (a java.util.logging.Level).  Useful for
debugging at the REPL.
----
===(_with-logger_ logger-name level & body)===
====Macro====
Executes 'body' with `*`logger`*` bound to a logger with the given name
and level.  'level' is expanded with 'log-level'.
