#summary macro-utils API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for macro-utils=
by Konrad Hinsen

Usage: 
{{{
(ns <your-namespace>
  (:require clojure.contrib.macro-utils))
}}}
==Overview==
<pre> Local macros and symbol macros 
 
Local macros are defined by a macrolet form. They are usable only 
inside its body. Symbol macros can be defined globally 
(defsymbolmacro) or locally (symbol-macrolet). A symbol 
macro defines a form that replaces a symbol during macro 
expansion. Function arguments and symbols bound in let 
forms are not subject to symbol macro expansion. 
 
Local macros are most useful in the definition of the expansion 
of another macro, they may be used anywhere. Global symbol 
macros can be used only inside a with-symbol-macros form.</pre>


==Public Variables and Functions==
Shortcuts:
[#defsymbolmacro defsymbolmacro] [#deftemplate deftemplate] [#macrolet macrolet] [#mexpand mexpand] [#mexpand-1 mexpand-1] [#mexpand-all mexpand-all] [#symbol-macrolet symbol-macrolet] [#with-symbol-macros with-symbol-macros] 

----
===defsymbolmacro===
====macro====
<pre>
Usage: *(_defsymbolmacro_ symbol expansion)*
</pre>
<pre> Define a symbol macro. Because symbol macros are not part of 
Clojure's built-in macro expansion system, they can be used only 
inside a with-symbol-macros form.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#200 Source] [http://www.google.com/codesearch?hl=en&lr=&q=defsymbolmacro+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===deftemplate===
====macro====
<pre>
Usage: *(_deftemplate_ name params & forms)*
</pre>
<pre> Define a macro that expands into forms after replacing the 
symbols in params (a vector) by the corresponding parameters 
given in the macro call.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#214 Source] [http://www.google.com/codesearch?hl=en&lr=&q=deftemplate+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===macrolet===
====macro====
<pre>
Usage: *(_macrolet_ fn-bindings & exprs)*
</pre>
<pre> Define local macros that are used in the expansion of exprs. The 
syntax is the same as for letfn forms.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#179 Source] [http://www.google.com/codesearch?hl=en&lr=&q=macrolet+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===mexpand===
====function====
<pre>
Usage: *(_mexpand_ form)*
</pre>
<pre> Like clojure.core/macroexpand, but takes into account symbol macros.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#234 Source] [http://www.google.com/codesearch?hl=en&lr=&q=mexpand+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===mexpand-1===
====function====
<pre>
Usage: *(_mexpand-1_ form)*
</pre>
<pre> Like clojure.core/macroexpand-1, but takes into account symbol macros.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#226 Source] [http://www.google.com/codesearch?hl=en&lr=&q=mexpand-1+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===mexpand-all===
====function====
<pre>
Usage: *(_mexpand-all_ form)*
</pre>
<pre> Perform a full recursive macro expansion of a form.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#242 Source] [http://www.google.com/codesearch?hl=en&lr=&q=mexpand-all+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===symbol-macrolet===
====macro====
<pre>
Usage: *(_symbol-macrolet_ symbol-bindings & exprs)*
</pre>
<pre> Define local symbol macros that are used in the expansion of exprs. 
The syntax is the same as for let forms.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#190 Source] [http://www.google.com/codesearch?hl=en&lr=&q=symbol-macrolet+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===with-symbol-macros===
====macro====
<pre>
Usage: *(_with-symbol-macros_ & exprs)*
</pre>
<pre> Fully expand exprs, including symbol macros.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macro_utils.clj#209 Source] [http://www.google.com/codesearch?hl=en&lr=&q=with-symbol-macros+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
