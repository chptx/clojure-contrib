#summary macros API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for macros=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.macros))
}}}


==Public Variables and Functions==
Shortcuts:
[#(_const_expr) const] [#(_letfn-_fn-bindings_&_exprs) letfn-] 

----
===(_const_ expr)===
====Macro====
<pre> Evaluate the constant expression expr at compile time.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macros.clj#15 Source] [http://www.google.com/codesearch?hl=en&lr=&q=const+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_letfn-_ fn-bindings & exprs)===
====Macro====
<pre> OBSOLETE: use clojure.core/letfn
A variant of let for local function definitions. fn-bindings consists
of name/args/body triples, with (letfn `[`name args body`]` ...)
being equivalent to (let `[`name (fn name args body)`]` ...).</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/macros.clj#25 Source] [http://www.google.com/codesearch?hl=en&lr=&q=letfn-+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]