#summary miglayout API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for miglayout=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.miglayout))
}}}


==Public Variables and Functions==
Variables and Functions in miglayout.internal:
[MiglayoutApiDoc#(_component?_x) component?] [MiglayoutApiDoc#(_constraint?_x) constraint?] [MiglayoutApiDoc#(_format-constraint_c) format-constraint] [MiglayoutApiDoc#(_format-constraints_&_constraints) format-constraints] [MiglayoutApiDoc#(_parse-item-constraints_&_args) parse-item-constraints] 

==Namespace clojure.contrib.miglayout.internal==
----
===(_component?_ x)===
<pre> Returns true if x is a java.awt.Component</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#52 Source]
----
===(_constraint?_ x)===
<pre> Returns true if x is not a keyword-item or component</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#57 Source]
----
===(_format-constraint_ c)===
<pre> Returns a vector of vectors representing one or more constraints
separated by commas. Constraints may be specified in Clojure using
strings, keywords, vectors, maps, and/or sets.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#25 Source]
----
===(_format-constraints_ & constraints)===
<pre> Returns a string representing all the constraints for one keyword-item
or component formatted for miglayout.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#40 Source]
----
===(_parse-item-constraints_ & args)===
<pre> Iterates over args and builds a map containing values associated with
:keywords and :components. The value for :keywords is a map from keyword
items to constraints strings. The value for :components is a vector of
vectors each associating a component with its constraints string.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#64 Source]
