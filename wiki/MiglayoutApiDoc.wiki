#summary miglayout API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for miglayout=
by Stephen C. Gilardi

Usage: 
{{{
(ns <your-namespace>
  (:require clojure.contrib.miglayout))
}}}
==Overview==
<pre> Clojure support for the MiGLayout layout manager 
http://www.miglayout.com/ 
 
Example: 
 
  (use '`[`clojure.contrib.miglayout.test :as mlt :only ()`]`) 
  (dotimes `[`i 5`]` (mlt/run-test i))</pre>


==Public Variables and Functions==
Shortcuts:
[#components components] [#miglayout miglayout] 

Variables and Functions in miglayout.example:
[MiglayoutApiDoc#fahrenheit fahrenheit] [MiglayoutApiDoc#main main] 

Variables and Functions in miglayout.internal:
[MiglayoutApiDoc#add-components add-components] [MiglayoutApiDoc#component? component?] [MiglayoutApiDoc#constraint? constraint?] [MiglayoutApiDoc#do-layout do-layout] [MiglayoutApiDoc#format-constraint format-constraint] [MiglayoutApiDoc#format-constraints format-constraints] [MiglayoutApiDoc#get-components get-components] [MiglayoutApiDoc#parse-component-constraint parse-component-constraint] [MiglayoutApiDoc#parse-item-constraints parse-item-constraints] 

Variables and Functions in miglayout.test:
[MiglayoutApiDoc#label label] [MiglayoutApiDoc#sep sep] [MiglayoutApiDoc#text-field text-field] 

----
===components===
====function====
<pre>
Usage: *(_components_ container)*
</pre>
<pre> Returns a map from id (a keyword) to component for all components with 
an id constraint set</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout.clj#75 Source] [http://www.google.com/codesearch?hl=en&lr=&q=components+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===miglayout===
====function====
<pre>
Usage: *(_miglayout_ container & args)*
</pre>
<pre> Adds java.awt.Components to a java.awt.Container with constraints 
formatted for the MiGLayout layout manager. 
 
Arguments: container `[`item constraint`*``]``*` 
 
  - container: the container for the specified components, its layout 
    manager will be set to a new instance of MigLayout 
 
  - an inline series of items and constraints--each item may be followed 
    by zero or more constraints. 
 
Item: 
 
  - An item is either a Component or one of the keywords :layout 
   :column or :row. Constraints for a keyword item affect the entire 
    layout. 
 
Constraint: string, keyword, vector, map, or set 
 
  - A string specifies one or more constraints each with zero or more 
    arguments. 
  - A keyword specifies a single constraint without arguments 
  - A vector specifies a single constraint with one or more arguments 
  - A map specifies one or more constraints as keys, each mapped to a 
    single argument 
  - A set groups two or more constraints, each a string, keyword, 
    vector, map, or set 
 
Any items marked with an "id" constraint will be included in a map from 
id to component attached to the container. The map can be retrieved using 
clojure.contrib.miglayout/components.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout.clj#37 Source] [http://www.google.com/codesearch?hl=en&lr=&q=miglayout+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
==Namespace clojure.contrib.miglayout.example==
----
===fahrenheit===
====function====
<pre>
Usage: *(_fahrenheit_ c-str)*
</pre>
<pre> Converts a string containing a Celsius temperature to a string 
containing a Fahrenheit temperature. Returns "input?" if the 
input can't be read</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/example.clj#24 Source] [http://www.google.com/codesearch?hl=en&lr=&q=fahrenheit+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===main===
====function====
<pre>
Usage: *(_main_)*
</pre>
<pre> Creates a converter UI</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/example.clj#35 Source] [http://www.google.com/codesearch?hl=en&lr=&q=main+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
==Namespace clojure.contrib.miglayout.internal==
----
===add-components===
====function====
<pre>
Usage: *(_add-components_ container components)*
</pre>
<pre> Adds components with constraints to a container</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#94 Source] [http://www.google.com/codesearch?hl=en&lr=&q=add-components+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===component?===
====function====
<pre>
Usage: *(_component?_ x)*
</pre>
<pre> Returns true if x is a java.awt.Component</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#59 Source] [http://www.google.com/codesearch?hl=en&lr=&q=component?+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===constraint?===
====function====
<pre>
Usage: *(_constraint?_ x)*
</pre>
<pre> Returns true if x is not a keyword-item or component</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#64 Source] [http://www.google.com/codesearch?hl=en&lr=&q=constraint?+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===do-layout===
====function====
<pre>
Usage: *(_do-layout_ container layout column row components)*
</pre>
<pre> Attaches a MigLayout layout manager to container and adds components 
with constraints</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#114 Source] [http://www.google.com/codesearch?hl=en&lr=&q=do-layout+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===format-constraint===
====function====
<pre>
Usage: *(_format-constraint_ c)*
</pre>
<pre> Returns a vector of vectors representing one or more constraints 
separated by commas. Constraints may be specified in Clojure using 
strings, keywords, vectors, maps, and/or sets.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#32 Source] [http://www.google.com/codesearch?hl=en&lr=&q=format-constraint+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===format-constraints===
====function====
<pre>
Usage: *(_format-constraints_ & constraints)*
</pre>
<pre> Returns a string representing all the constraints for one keyword-item 
or component formatted for miglayout.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#47 Source] [http://www.google.com/codesearch?hl=en&lr=&q=format-constraints+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===get-components===
====function====
<pre>
Usage: *(_get-components_ container)*
</pre>
<pre> Returns a map from id to component for all components with an id</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#109 Source] [http://www.google.com/codesearch?hl=en&lr=&q=get-components+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===parse-component-constraint===
====function====
<pre>
Usage: *(_parse-component-constraint_ constraint)*
</pre>
<pre> Parses a component constraint string returning a CC object</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#88 Source] [http://www.google.com/codesearch?hl=en&lr=&q=parse-component-constraint+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===parse-item-constraints===
====function====
<pre>
Usage: *(_parse-item-constraints_ & args)*
</pre>
<pre> Iterates over args and builds a map containing values associated with 
:keywords and :components. The value for :keywords is a map from keyword 
items to constraints strings. The value for :components is a vector of 
vectors each associating a component with its constraints string.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/internal.clj#71 Source] [http://www.google.com/codesearch?hl=en&lr=&q=parse-item-constraints+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
==Namespace clojure.contrib.miglayout.test==
----
===label===
====function====
<pre>
Usage: *(_label_ text)*
</pre>
<pre> Returns a swing label</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/test.clj#32 Source] [http://www.google.com/codesearch?hl=en&lr=&q=label+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===sep===
====function====
<pre>
Usage: *(_sep_)*
</pre>
<pre> Returns a swing separator</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/test.clj#43 Source] [http://www.google.com/codesearch?hl=en&lr=&q=sep+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===text-field===
====function====
<pre>
Usage: *(_text-field_)
       (_text-field_ width)*
</pre>
<pre> Returns a swing text field</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/miglayout/test.clj#37 Source] [http://www.google.com/codesearch?hl=en&lr=&q=text-field+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
