#summary probabilities.finite-distributions API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for probabilities.finite-distributions=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.probabilities.finite-distributions))
}}}


==Public Variables and Functions==
Shortcuts:
[#(_certainly_v) certainly] [#(_choose_&_choices) choose] [#cond-dist-m cond-dist-m] [#(_cond-prob_pred_dist) cond-prob] [#dist-m dist-m] [#(_join-with_f_dist1_dist2) join-with] [#(_normalize_weights) normalize] [#(_prob_pred_dist) prob] [#(_uniform_coll) uniform] 

----
===(_certainly_ v)===
<pre> Returns a distribution in which the single value v has probability 1.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#105 Source] [http://www.google.com/codesearch?hl=en&lr=&q=certainly+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_choose_ & choices)===
<pre> Construct a distribution from an explicit list of probabilities
and values. They are given in the form of a vector of probability-value
pairs. In the last pair, the probability can be given by the keyword
:else, which stands for 1 minus the total of the other probabilities.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#89 Source] [http://www.google.com/codesearch?hl=en&lr=&q=choose+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===_cond-dist-m_===
<pre> Variant of the dist monad that can handle undefined values.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#43 Source] [http://www.google.com/codesearch?hl=en&lr=&q=cond-dist-m+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_cond-prob_ pred dist)===
<pre> Returns the conditional probability for the values in dist that satisfy
the predicate pred.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#118 Source] [http://www.google.com/codesearch?hl=en&lr=&q=cond-prob+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===_dist-m_===
<pre> Monad describing computations on fuzzy quantities, represented by a finite
probability distribution for the possible values. A distribution is
represented by a map from values to probabilities.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#23 Source] [http://www.google.com/codesearch?hl=en&lr=&q=dist-m+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_join-with_ f dist1 dist2)===
<pre> Returns the distribution of (f x y) with x from dist1 and y from dist2.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#110 Source] [http://www.google.com/codesearch?hl=en&lr=&q=join-with+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_normalize_ weights)===
<pre> Convert a weight map (e.g. a map of counter values) to a distribution
by multiplying with a normalization factor. If the map has a key
:total, its value is assumed to be the sum over all the other values and
it is used for normalization. Otherwise, the sum is calculated
explicitly. The :total key is removed from the resulting distribution.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#67 Source] [http://www.google.com/codesearch?hl=en&lr=&q=normalize+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_prob_ pred dist)===
<pre> Return the probability that the predicate pred is satisfied in the
distribution dist, i.e. the sum of the probabilities of the values
that satisfy pred.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#154 Source] [http://www.google.com/codesearch?hl=en&lr=&q=prob+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]----
===(_uniform_ coll)===
<pre> Return a distribution in which each of the elements of coll
has the same probability.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/probabilities/finite_distributions.clj#81 Source] [http://www.google.com/codesearch?hl=en&lr=&q=uniform+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]