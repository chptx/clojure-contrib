#summary repl-ln API Reference
#sidebar ApiDocSidebar

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for repl-ln=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.repl-ln))
}}}


==Public Variables and Functions==
Shortcuts:
[#print-repl-info print-repl-info] [#repl repl] [#repl-info repl-info] [#repl-prompt repl-prompt] [#set-repl-name set-repl-name] [#set-repl-prompt set-repl-prompt] [#stream-repl stream-repl] 

----
===print-repl-info===
====function====
<pre>
Usage: *(_print-repl-info_)*
</pre>
<pre>Prints info about the current repl</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#204 Source] [http://www.google.com/codesearch?hl=en&lr=&q=print-repl-info+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===repl===
====function====
<pre>
Usage: *(_repl_ & options)*
</pre>
<pre>A repl that supports line numbers. For definitions and evaluations made 
at the repl, the repl-name and line number will be reported as the 
origin. Use set-repl-name and set-repl-prompt to customize the repl name 
and prompt. This repl supports all of the keyword arguments documented 
for clojure.main/repl with the following change and additions: 
 
     - :prompt has a new default 
       default: #(clojure.core/print (repl-prompt)) 
 
     - :name-fmt, Name format string 
       default: the name-fmt of the parent repl, or "repl-%S" 
 
     - :prompt-fmt, Prompt format string 
       default: the prompt-fmt of the parent repl, or "%S:%L %N=> "</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#213 Source] [http://www.google.com/codesearch?hl=en&lr=&q=repl+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===repl-info===
====function====
<pre>
Usage: *(_repl-info_)*
</pre>
<pre>Returns a map of info about the current repl</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#198 Source] [http://www.google.com/codesearch?hl=en&lr=&q=repl-info+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===repl-prompt===
====function====
<pre>
Usage: *(_repl-prompt_)*
</pre>
<pre>Returns the current repl prompt based on this repl's prompt-fmt</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#144 Source] [http://www.google.com/codesearch?hl=en&lr=&q=repl-prompt+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===set-repl-name===
====function====
<pre>
Usage: *(_set-repl-name_)
       (_set-repl-name_ name-fmt)*
</pre>
<pre>Sets the repl name format to the string name-fmt. Include the following 
codes in the name to make the corresponding dynamic values part of it: 
 
  %S - repl serial number 
  %T - thread id 
  %D - nesting depth in this thread 
 
With no arguments, resets the repl name to its default: "repl-%S"</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#153 Source] [http://www.google.com/codesearch?hl=en&lr=&q=set-repl-name+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===set-repl-prompt===
====function====
<pre>
Usage: *(_set-repl-prompt_)
       (_set-repl-prompt_ prompt-fmt)*
</pre>
<pre>Sets the repl prompt. Include the following codes in the prompt to make 
the corresponding dynamic values part of it: 
 
  %S - repl serial number 
  %T - thread id 
  %D - nesting depth in this thread 
  %L - input line number 
  %N - namespace name 
 
With no arguments, resets the repl pompt to its default: "%S:%L %N=> "</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#176 Source] [http://www.google.com/codesearch?hl=en&lr=&q=set-repl-prompt+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
----
===stream-repl===
====function====
<pre>
Usage: *(_stream-repl_ & options)*
</pre>
<pre>Repl entry point that provides convenient overriding of input, output, 
and err streams via sequential keyword-value pairs. Default values 
for :in, :out, and :err are streams associated with System/in, 
System/out, and System/err using UTF-8 encoding. Also supports all the 
options provided by clojure.contrib.repl-ln/repl.</pre>

[http://code.google.com/p/clojure-contrib/source/browse/trunk/src/clojure/contrib/repl_ln/clojure/contrib/repl_ln.clj#115 Source] [http://www.google.com/codesearch?hl=en&lr=&q=stream-repl+package%3Ahttp%3A%2F%2Fclojure-contrib\.googlecode\.com&sbtn=Search Search for references in contrib]
