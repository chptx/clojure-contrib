#summary trace API Reference

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for trace=
Usage: 
{{{
(ns <your-namespace>
  (:use clojure.contrib.trace))
}}}
==Public Variables and Functions==
Shortcuts:
[#_*trace-depth*_ *trace-depth*] [#(_deftrace_name_&_definition) deftrace] [#(_trace_value) trace] [#(_trace-fn-call_name_f_args) trace-fn-call] [#(_trace-indent_) trace-indent] [#(_tracer_name_value) tracer] 
----
===_*trace-depth*_===
Current stack depth of traced function calls.
----
===(_deftrace_ name & definition)===
====Macro====
Use in place of defn; traces each call/return of this fn, including
arguments.  Nested calls to deftrace'd functions will print a
tree-like structure.
----
===(_trace_ value)===
===(_trace_ name value)===
Sends name (optional) and value to the tracer function, then
returns value.  May be wrapped around any expression without
affecting the result.
----
===(_trace-fn-call_ name f args)===
Traces a single call to a function f with args.  'name' is the
symbol name of the function.
----
===(_trace-indent_)===
Returns an indentation string based on *trace-depth*
----
===(_tracer_ name value)===
This function is called by trace.  Prints to standard output, but
may be rebound to do anything you like.  'name' is optional.
