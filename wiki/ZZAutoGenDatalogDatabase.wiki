#summary An api-out of the API of clojure.contrib.datalog.database

<wiki:comment>
This document was auto-generated from the clojure.contrib source by contrib-autodoc.
To report errors or ask questions about the overall documentation structure, formatting,
etc., contact Tom Faulhaber (google mail name: tomfaulhaber).
For errors in the documentation of a particular namespace, contact the author of that
namespace.
</wiki:comment>
=API for clojure.contrib.datalog.database=
==Public Variables and Functions==
----
===(_add-index_ db name key)===
Adds an index to an empty relation named name
----
===(_add-relation_ db name keys)===
Adds a relation to the database
----
===(_add-tuple_ db rel-name tuple)===
===(_add-tuple_ rel tuple)===
Two forms:
[db relation-name tuple] adds tuple to the named relation.  Returns
the new database.
[rel tuple] adds to the relation object.  Returns the new relation.
----
===(_add-tuples_ db & tupls)===
Adds a collection of tuples to the db, as
(add-tuples db
[:rel-name :key-1 1 :key-2 2]
[:rel-name :key-1 2 :key-2 3])
----
===(_any-match?_ db rn pt)===
Finds if there are any matching records for the partial tuple
----
===(_database-counts_ db)===
Returns a map with the count of elements in each relation.
----
===(_database-merge_ dbs)===
Merges databases together
----
===(_database-merge-parallel_ dbs)===
Merges databases together in parallel
----
===(_datalog-relation_ schema data indexes)===
Creates a relation
----
===(_ensure-relation_ db name keys indexes)===
If the database lacks the named relation, add it
----
===(_get-relation_ db rel-name)===
Get a relation object by name
----
===(_make-database_ & commands)===
====Macro====
Makes a database, like this
(make-database
(relation :fred [:mary :sue])
(index :fred :mary)
(relation :sally [:jen :becky])
(index :sally :jen)
(index :sally :becky))
----
===(_merge-relations_ r1 r2)===
Merges two relations
----
===(_remove-tuple_ db rel-name tuple)===
===(_remove-tuple_ rel tuple)===
Two forms:
[db relation-name tuple] removes the tuple from the named relation,
returns a new database.
[rel tuple] removes the tuple from the relation.  Returns the new
relation.
----
===(_replace-relation_ db rel-name rel)===
Add or replace a fully constructed relation object to the database.
----
===(_select_ db rn pt)===
finds all matching tuples to the partial tuple (pt) in the relation named (rn)
